<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:cxf="http://camel.apache.org/schema/cxf"
  xmlns:http="http://cxf.apache.org/transports/http/configuration"
  xmlns:sec="http://cxf.apache.org/configuration/security"
  xmlns:jaxws="http://cxf.apache.org/jaxws"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
      http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd 
      http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
      ">
<!--<bean id="consumer" class="org.apache.cxf.rs.security.oauth2.client.Consumer">
    <property name="key" value="123456789"/>
    <property name="secret" value="987654321"/>
</bean>  -->
<cxf:cxfEndpoint id="rsClient" address="https://api.lufthansa.com/v1" serviceClass="io.swagger.api.ReferenceDataApi" loggingFeatureEnabled="true"/>
<bean id="consumer" class="org.apache.cxf.rs.security.oauth2.client.Consumer">
   <property name="clientId" value="lufthansaClient"/>
   <property name="clientSecret" value="Secret"/>
</bean>
<bean id="bearerAuthSupplier" class="org.apache.cxf.rs.security.oauth2.client.BearerAuthSupplier">
   <!-- access token -->
   
   <property name="accessToken" value="h2ufapgsx85cv52ywmnb9n2h"/>
   <!-- refresh token and the info needed to use it to refersh the expired access token proactively or in response to 401 -->
   <property name="refreshToken" value="87654321"/>
   <!-- 
       Set this property for the authenticator to check the access token expiry date and refresh the token proactively.
       Note that this property can also become effective after the first token refresh as it is not known in advance when 
       the injected access token will expire
   -->
   
   <property name="refreshEarly" value="true"/>
   <!-- client OAuth2 id and secret - needed to use a refresh token grant -->
   <property name="consumer" ref="consumer"/> 
   <!-- address of OAuth2 token service that supports a refresh token grant -->
   <property name="accessTokenServiceUri" value="https://api.lufthansa.com/v1/oauth/token"/> 
</bean>
  <cxf:rsClient id="rsClient2" address="https://api.lufthansa.com/v1"
    serviceClass="org.aalto.anton.omi.lufthansa.camel.Lufthansa"
    loggingFeatureEnabled="true">
<!--     <cxf:providers> -->
<!--        <ref bean="jsonProvider"/> -->
<!--     </cxf:providers> -->
  </cxf:rsClient> 
  
<http:conduit name="https://api.lufthansa.com/v1/oauth/.*">
   <http:authSupplier bean="consumer"/>
 
    <http:tlsClientParameters>
      <sec:keyManagers keyPassword="keypass">
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/keystore.jks"/>
      </sec:keyManagers>
      <sec:trustManagers>
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/truststore.jks"/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
    <http:client AutoRedirect="true" Connection="Keep-Alive"/>
  </http:conduit>
   <http:conduit name="https://api.lufthansa.com/v1/references/.*">
<!--    <http:authSupplier bean="bearerAuthSupplier"/> -->
    <http:tlsClientParameters>
      <sec:keyManagers keyPassword="keypass">
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/keystore.jks"/>
      </sec:keyManagers>
      <sec:trustManagers>
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/truststore.jks"/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
    <http:client AutoRedirect="true" Connection="Keep-Alive"/>
  </http:conduit>

   <http:conduit name="http://127.0.0.1:8019/.*">
<!--    <http:authSupplier bean="bearerAuthSupplier"/> -->
    <http:tlsClientParameters>
      <sec:keyManagers keyPassword="keypass">
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/keystore.jks"/>
      </sec:keyManagers>
      <sec:trustManagers>
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/truststore.jks"/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
    <http:client AutoRedirect="true" Connection="Keep-Alive"/>
  </http:conduit>


<!-- api {http://api.swagger.io/}ReferenceDataApi-->
   <http:conduit name="{http://api.swagger.io/}ReferenceDataApi">
<!--    <http:authSupplier bean="bearerAuthSupplier"/> -->
    <http:tlsClientParameters>
      <sec:keyManagers keyPassword="keypass">
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/keystore.jks"/>
      </sec:keyManagers>
      <sec:trustManagers>
        <sec:keyStore type="JKS" password="keypass"
                      file="C:/Stuff/jks/truststore.jks"/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
    <http:client AutoRedirect="true" Connection="Keep-Alive"/>
  </http:conduit>

<!-- <http:conduit name="https://api.lufthansa.com/v1/oauth/.*"> -->
<!--    <http:authSupplier bean="bearerAuthSupplier"/> -->
<!-- </http:conduit> -->

<!-- <http:conduit name="http://127.0.0.1:8019/.*"> -->
<!--    <http:authSupplier bean="bearerAuthSupplier"/> -->
<!-- </http:conduit> -->
</beans>